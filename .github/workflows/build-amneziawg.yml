name: Build AmneziaWG packages
on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: "OpenWrt version"
        type: string
        required: true
        default: "SNAPSHOT"
      amneziawg_version:
        description: "AmneziaWG version"
        type: string
        required: true
        default: "master"
      openwrt_arch:
        description: "OpenWrt arch"
        type: string
        required: true
        default: "aarch64_cortex-a53"
      openwrt_target:
        description: "OpenWrt target"
        type: string
        required: true
        default: "mediatek"
      openwrt_subtarget:
        description: "OpenWrt subtarget"
        type: string
        required: true
        default: "filogic"
      update_go:
        description: "Update Go version"
        type: boolean
        required: true
        default: true

jobs:
  build-amneziawg:
    name: "Build AmneziaWG packages for OpenWrt: ${{ inputs.openwrt_version }} - ${{ inputs.openwrt_arch }} :: ${{ inputs.openwrt_target }}/${{ inputs.openwrt_subtarget }}"
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout YAAWG repository
        uses: actions/checkout@v5
        with:
          path: amneziawg
          ref: ${{ inputs.amneziawg_version }}
          fetch-depth: 0

      - name: Checkout OpenWrt repository
        if: ${{ inputs.update_go }}
        uses: actions/checkout@v5
        with:
          path: openwrt
          repository: openwrt/openwrt
          ref: ${{ inputs.openwrt_version == 'SNAPSHOT' && 'master' || format('v{0}', inputs.openwrt_version) }}
          fetch-depth: 0

      - name: Checkout OpenWRT Packages repository
        uses: actions/checkout@v5
        if: ${{ inputs.update_go }}
        with:
          path: packages
          repository: openwrt/packages
          fetch-depth: 0

      - name: Update feeds
        run: |
          set -e -x
          cd openwrt
          if [ "${{ inputs.openwrt_version }}" = "SNAPSHOT" ]; then
            base_url="https://downloads.openwrt.org/snapshots/targets/${{ inputs.openwrt_target }}/${{ inputs.openwrt_subtarget }}"
          else
            base_url="https://downloads.openwrt.org/releases/${{ inputs.openwrt_version }}/targets/${{ inputs.openwrt_target }}/${{ inputs.openwrt_subtarget }}"
          fi
          echo "src-cpy awgopenwrt ../amneziawg" >> feeds.conf.default
          curl -fsL "$base_url/config.buildinfo" > .conf
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y" >> .conf
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y" >> .conf
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=y" >> .conf
          echo "CONFIG_PACKAGE_kmod-amneziawg=y" >> .conf
          echo "CONFIG_PACKAGE_amneziawg-go=y" >> .conf
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .conf
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .conf
          ./scripts/feeds update -a

      - name: Update Go version
        if: ${{ inputs.update_go }}
        run: |
          set -e -x
          rm -r openwrt/feeds/packages/lang/golang
          cp -r packages/lang/golang openwrt/feeds/packages/lang

      - name: Build toolchain and kernel
        run: |
          set -e -x
          cd openwrt
          ./scripts/feeds install -a
          make defconfig
          make tools/install -j $(nproc)
          make toolchain/install -j $(nproc)
          make target/linux/compile -j $(nproc)

      - name: Compile AmneziaWG packages
        run: |
          set -e -x
          cd openwrt
          make package/kmod-amneziawg/{clean,download,prepare,compile} -j $(nproc)
          make package/amneziawg-go/{clean,download,prepare,compile} -j $(nproc)
          make package/luci-proto-amneziawg/{clean,download,prepare,compile} -j $(nproc)
          make package/amneziawg-tools/{clean,download,prepare,compile} -j $(nproc)

      - name: Print Folder Tree
        uses: jaywcjlove/github-action-folder-tree@main

      - name: Prepare artifacts
        run: |
          set -e -x
          pwd
          ls -laht
          ls -laht ./openwrt
          mkdir awgrelease
          echo "vermagic=$(cat ./openwrt/build_dir/target-${{ inputs.openwrt_arch }}*/linux-${{ inputs.openwrt_target }}_${{ inputs.openwrt_subtarget }}/linux-*/.vermagic)" > awgrelease/vermagic
          cp ./openwrt/bin/packages/${{ inputs.openwrt_arch }}/awgopenwrt/*.{ipk,apk} ./awgrelease
          cp ./openwrt/bin/targets/${{ inputs.openwrt_arch }}/${{ inputs.openwrt_target }}/packages/kmod-amneziawg* ./awgrelease

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-${{ inputs.openwrt_version }}_${{ inputs.openwrt_arch }}_${{ inputs.openwrt_target }}_${{ inputs.openwrt_subtarget }}
          path: awgrelease/*
